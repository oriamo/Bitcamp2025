/**
 * Options for construction an RNKeyProvider
 */
/**
 * @experimental
 */
export default class RNKeyProvider extends BaseKeyProvider {
    constructor(options: any);
    nativeKeyProvider: import("@livekit/react-native-webrtc").RTCKeyProvider;
    getLatestKeyIndex(participantId: any): any;
    /**
     * Accepts a passphrase that's used to create the crypto keys.
     * @param key
     */
    setSharedKey(key: any, keyIndex: any): Promise<any>;
    ratchetSharedKey(keyIndex: any): Promise<void>;
    /**
     * Accepts a passphrase that's used to create the crypto keys for a participant's stream.
     * @param key
     */
    setKey(participantId: any, key: any, keyIndex: any): Promise<any>;
    ratchetKey(participantIdentity: any, keyIndex: any): Promise<void>;
    setSifTrailer(trailer: any): Promise<any>;
    /**
     * @internal
     */
    get rtcKeyProvider(): import("@livekit/react-native-webrtc").RTCKeyProvider;
    dispose(): void;
}
import { BaseKeyProvider } from 'livekit-client';
