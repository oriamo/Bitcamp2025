import { type AgentState, type TrackReferenceOrPlaceholder } from '@livekit/components-react';
import { type ColorValue, type DimensionValue, type ViewStyle } from 'react-native';
import React from 'react';
export type BarVisualizerOptions = {
    /** decimal values from 0 to 1 */
    maxHeight?: number;
    /** decimal values from 0 to 1 */
    minHeight?: number;
    barColor?: ColorValue;
    barWidth?: DimensionValue;
    barBorderRadius?: number;
};
/**
 * @beta
 */
export interface BarVisualizerProps {
    /** If set, the visualizer will transition between different voice assistant states */
    state?: AgentState;
    /** Number of bars that show up in the visualizer */
    barCount?: number;
    trackRef?: TrackReferenceOrPlaceholder;
    options?: BarVisualizerOptions;
    /**
     * Custom React Native styles for the container.
     */
    style?: ViewStyle;
}
/**
 * Visualizes audio signals from a TrackReference as bars.
 * If the `state` prop is set, it automatically transitions between VoiceAssistant states.
 * @beta
 *
 * @remarks For VoiceAssistant state transitions this component requires a voice assistant agent running with livekit-agents \>= 0.9.0
 *
 * @example
 * ```tsx
 * function SimpleVoiceAssistant() {
 *   const { state, audioTrack } = useVoiceAssistant();
 *   return (
 *    <BarVisualizer
 *      state={state}
 *      trackRef={audioTrack}
 *    />
 *   );
 * }
 * ```
 */
export declare const BarVisualizer: ({ style, state, barCount, trackRef, options, }: BarVisualizerProps) => React.JSX.Element;
export declare const useBarAnimator: (state: AgentState | undefined, columns: number, interval: number) => number[];
