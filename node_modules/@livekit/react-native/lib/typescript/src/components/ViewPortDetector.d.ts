import React, { Component, type PropsWithChildren } from 'react';
import { type AppStateStatus, type ViewStyle } from 'react-native';
export type Props = {
    disabled?: boolean;
    style?: ViewStyle;
    onChange?: (isVisible: boolean) => void;
    delay?: number;
    propKey?: any;
};
/**
 * Detects when this is in the viewport and visible.
 *
 * Will not fire visibility changes for zero width/height components.
 */
export default class ViewPortDetector extends Component<PropsWithChildren<Props>> {
    private lastValue;
    private interval;
    private view;
    private lastAppStateActive;
    private appStateSubscription;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    hasValidTimeout: (disabled?: boolean, delay?: number) => boolean;
    UNSAFE_componentWillReceiveProps(nextProps: Props): void;
    handleAppStateChange: (nextAppState: AppStateStatus) => void;
    startWatching: () => void;
    stopWatching: () => void;
    checkVisibility: () => void;
    checkInViewPort: (width?: number, height?: number) => void;
    updateVisibility: (isVisible: boolean) => void;
    render(): React.JSX.Element;
}
