{"version":3,"names":["_reactNativeWebrtc","require","_livekitClient","_events","_interopRequireDefault","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","RNE2EEManager","EventEmitter","constructor","keyProvider","Map","RTCFrameCryptorAlgorithm","kAesGcm","encryptionEnabled","setup","room","setupEventListeners","localParticipant","on","ParticipantEvent","LocalTrackPublished","publication","setupE2EESender","LocalTrackUnpublished","frameCryptor","findTrackCryptor","trackSid","frameCryptors","delete","setEnabled","dispose","RoomEvent","TrackSubscribed","_track","pub","participant","setupE2EEReceiver","TrackUnsubscribed","_participant","isEncrypted","createFrameCryptorForSender","track","sender","identity","set","setKeyIndex","getLatestKeyIndex","createFrameCryptorForReceiver","receiver","setSifTrailer","trailer","trackId","get","participantId","RTCFrameCryptorFactory","createFrameCryptorForRtpSender","algorithm","rtcKeyProvider","createFrameCryptorForRtpReceiver","setupEngine","_engine","setParticipantCryptorEnabled","enabled","participantIdentity","_this$room","emit","EncryptionEvent","ParticipantEncryptionStatusChanged","_this$room2","getParticipantByIdentity","exports"],"sources":["RNE2EEManager.ts"],"sourcesContent":["import {\n  RTCFrameCryptorAlgorithm,\n  RTCFrameCryptorFactory,\n  RTCRtpReceiver,\n  type RTCFrameCryptor,\n  type RTCRtpSender,\n} from '@livekit/react-native-webrtc';\nimport {\n  LocalParticipant,\n  LocalTrackPublication,\n  ParticipantEvent,\n  RemoteParticipant,\n  RemoteTrackPublication,\n  RoomEvent,\n  type Room,\n  type BaseE2EEManager,\n  type E2EEManagerCallbacks,\n  EncryptionEvent,\n} from 'livekit-client';\nimport type RNKeyProvider from './RNKeyProvider';\nimport type RTCEngine from 'livekit-client/dist/src/room/RTCEngine';\nimport EventEmitter from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\n\n/**\n * @experimental\n */\nexport default class RNE2EEManager\n  extends (EventEmitter as new () => TypedEventEmitter<E2EEManagerCallbacks>)\n  implements BaseE2EEManager\n{\n  private room?: Room;\n  private frameCryptors: Map<string, RTCFrameCryptor> = new Map();\n  private keyProvider: RNKeyProvider;\n  private algorithm: RTCFrameCryptorAlgorithm =\n    RTCFrameCryptorAlgorithm.kAesGcm;\n\n  private encryptionEnabled: boolean = false;\n\n  constructor(keyProvider: RNKeyProvider) {\n    super();\n    this.keyProvider = keyProvider;\n    this.encryptionEnabled = false;\n  }\n\n  setup(room: Room) {\n    if (this.room !== room) {\n      this.room = room;\n      this.setupEventListeners(room);\n    }\n  }\n\n  private setupEventListeners(room: Room) {\n    room.localParticipant\n      .on(ParticipantEvent.LocalTrackPublished, async (publication) => {\n        this.setupE2EESender(publication, room.localParticipant);\n      })\n      .on(ParticipantEvent.LocalTrackUnpublished, async (publication) => {\n        let frameCryptor = this.findTrackCryptor(publication.trackSid);\n        if (frameCryptor) {\n          this.frameCryptors.delete(publication.trackSid);\n          await frameCryptor.setEnabled(false);\n          await frameCryptor.dispose();\n        }\n      });\n\n    room\n      .on(RoomEvent.TrackSubscribed, (_track, pub, participant) => {\n        this.setupE2EEReceiver(pub, participant);\n      })\n      .on(\n        RoomEvent.TrackUnsubscribed,\n        async (_track, publication, _participant) => {\n          let frameCryptor = this.findTrackCryptor(publication.trackSid);\n          if (frameCryptor) {\n            this.frameCryptors.delete(publication.trackSid);\n            await frameCryptor.setEnabled(false);\n            await frameCryptor.dispose();\n          }\n        }\n      );\n  }\n\n  private async setupE2EESender(\n    publication: LocalTrackPublication,\n    participant: LocalParticipant\n  ) {\n    if (!publication.isEncrypted) {\n      return;\n    }\n\n    var frameCryptor = this.findTrackCryptor(publication.trackSid);\n\n    if (!frameCryptor) {\n      frameCryptor = this.createFrameCryptorForSender(\n        publication.track!.sender,\n        participant.identity\n      );\n\n      this.frameCryptors.set(publication.trackSid, frameCryptor);\n      frameCryptor.setEnabled(true);\n      frameCryptor.setKeyIndex(\n        this.keyProvider.getLatestKeyIndex(participant.identity)\n      );\n    }\n  }\n\n  private async setupE2EEReceiver(\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant\n  ) {\n    if (!publication.isEncrypted) {\n      return;\n    }\n\n    var frameCryptor = this.findTrackCryptor(publication.trackSid);\n\n    if (!frameCryptor) {\n      frameCryptor = this.createFrameCryptorForReceiver(\n        publication.track!.receiver,\n        participant.identity\n      );\n\n      this.frameCryptors.set(publication.trackSid, frameCryptor);\n      frameCryptor.setEnabled(true);\n      frameCryptor.setKeyIndex(\n        this.keyProvider.getLatestKeyIndex(participant.identity)\n      );\n    }\n  }\n\n  setSifTrailer(trailer: Uint8Array): void {\n    this.keyProvider.setSifTrailer(trailer);\n  }\n\n  // Utility methods\n  //////////////////////\n\n  private findTrackCryptor(trackId: string): RTCFrameCryptor | undefined {\n    return this.frameCryptors.get(trackId);\n  }\n\n  private createFrameCryptorForSender(\n    sender: RTCRtpSender,\n    participantId: string\n  ): RTCFrameCryptor {\n    return RTCFrameCryptorFactory.createFrameCryptorForRtpSender(\n      participantId,\n      sender,\n      this.algorithm,\n      this.keyProvider.rtcKeyProvider\n    );\n  }\n\n  private createFrameCryptorForReceiver(\n    receiver: RTCRtpReceiver,\n    participantId: string\n  ): RTCFrameCryptor {\n    return RTCFrameCryptorFactory.createFrameCryptorForRtpReceiver(\n      participantId,\n      receiver,\n      this.algorithm,\n      this.keyProvider.rtcKeyProvider\n    );\n  }\n\n  setupEngine(_engine: RTCEngine): void {\n    // No-op\n  }\n  setParticipantCryptorEnabled(\n    enabled: boolean,\n    participantIdentity: string\n  ): void {\n    if (\n      this.encryptionEnabled !== enabled &&\n      participantIdentity === this.room?.localParticipant.identity\n    ) {\n      this.encryptionEnabled = enabled;\n      this.emit(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        enabled,\n        this.room!.localParticipant\n      );\n    } else {\n      const participant =\n        this.room?.getParticipantByIdentity(participantIdentity);\n      if (!participant) {\n        throw TypeError(\n          `couldn't set encryption status, participant not found ${participantIdentity}`\n        );\n      }\n      this.emit(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        enabled,\n        participant\n      );\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}