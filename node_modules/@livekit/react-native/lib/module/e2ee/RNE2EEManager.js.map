{"version":3,"names":["RTCFrameCryptorAlgorithm","RTCFrameCryptorFactory","ParticipantEvent","RoomEvent","EncryptionEvent","EventEmitter","RNE2EEManager","constructor","keyProvider","_defineProperty","Map","kAesGcm","encryptionEnabled","setup","room","setupEventListeners","localParticipant","on","LocalTrackPublished","publication","setupE2EESender","LocalTrackUnpublished","frameCryptor","findTrackCryptor","trackSid","frameCryptors","delete","setEnabled","dispose","TrackSubscribed","_track","pub","participant","setupE2EEReceiver","TrackUnsubscribed","_participant","isEncrypted","createFrameCryptorForSender","track","sender","identity","set","setKeyIndex","getLatestKeyIndex","createFrameCryptorForReceiver","receiver","setSifTrailer","trailer","trackId","get","participantId","createFrameCryptorForRtpSender","algorithm","rtcKeyProvider","createFrameCryptorForRtpReceiver","setupEngine","_engine","setParticipantCryptorEnabled","enabled","participantIdentity","_this$room","emit","ParticipantEncryptionStatusChanged","_this$room2","getParticipantByIdentity","TypeError"],"sources":["RNE2EEManager.ts"],"sourcesContent":["import {\n  RTCFrameCryptorAlgorithm,\n  RTCFrameCryptorFactory,\n  RTCRtpReceiver,\n  type RTCFrameCryptor,\n  type RTCRtpSender,\n} from '@livekit/react-native-webrtc';\nimport {\n  LocalParticipant,\n  LocalTrackPublication,\n  ParticipantEvent,\n  RemoteParticipant,\n  RemoteTrackPublication,\n  RoomEvent,\n  type Room,\n  type BaseE2EEManager,\n  type E2EEManagerCallbacks,\n  EncryptionEvent,\n} from 'livekit-client';\nimport type RNKeyProvider from './RNKeyProvider';\nimport type RTCEngine from 'livekit-client/dist/src/room/RTCEngine';\nimport EventEmitter from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\n\n/**\n * @experimental\n */\nexport default class RNE2EEManager\n  extends (EventEmitter as new () => TypedEventEmitter<E2EEManagerCallbacks>)\n  implements BaseE2EEManager\n{\n  private room?: Room;\n  private frameCryptors: Map<string, RTCFrameCryptor> = new Map();\n  private keyProvider: RNKeyProvider;\n  private algorithm: RTCFrameCryptorAlgorithm =\n    RTCFrameCryptorAlgorithm.kAesGcm;\n\n  private encryptionEnabled: boolean = false;\n\n  constructor(keyProvider: RNKeyProvider) {\n    super();\n    this.keyProvider = keyProvider;\n    this.encryptionEnabled = false;\n  }\n\n  setup(room: Room) {\n    if (this.room !== room) {\n      this.room = room;\n      this.setupEventListeners(room);\n    }\n  }\n\n  private setupEventListeners(room: Room) {\n    room.localParticipant\n      .on(ParticipantEvent.LocalTrackPublished, async (publication) => {\n        this.setupE2EESender(publication, room.localParticipant);\n      })\n      .on(ParticipantEvent.LocalTrackUnpublished, async (publication) => {\n        let frameCryptor = this.findTrackCryptor(publication.trackSid);\n        if (frameCryptor) {\n          this.frameCryptors.delete(publication.trackSid);\n          await frameCryptor.setEnabled(false);\n          await frameCryptor.dispose();\n        }\n      });\n\n    room\n      .on(RoomEvent.TrackSubscribed, (_track, pub, participant) => {\n        this.setupE2EEReceiver(pub, participant);\n      })\n      .on(\n        RoomEvent.TrackUnsubscribed,\n        async (_track, publication, _participant) => {\n          let frameCryptor = this.findTrackCryptor(publication.trackSid);\n          if (frameCryptor) {\n            this.frameCryptors.delete(publication.trackSid);\n            await frameCryptor.setEnabled(false);\n            await frameCryptor.dispose();\n          }\n        }\n      );\n  }\n\n  private async setupE2EESender(\n    publication: LocalTrackPublication,\n    participant: LocalParticipant\n  ) {\n    if (!publication.isEncrypted) {\n      return;\n    }\n\n    var frameCryptor = this.findTrackCryptor(publication.trackSid);\n\n    if (!frameCryptor) {\n      frameCryptor = this.createFrameCryptorForSender(\n        publication.track!.sender,\n        participant.identity\n      );\n\n      this.frameCryptors.set(publication.trackSid, frameCryptor);\n      frameCryptor.setEnabled(true);\n      frameCryptor.setKeyIndex(\n        this.keyProvider.getLatestKeyIndex(participant.identity)\n      );\n    }\n  }\n\n  private async setupE2EEReceiver(\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant\n  ) {\n    if (!publication.isEncrypted) {\n      return;\n    }\n\n    var frameCryptor = this.findTrackCryptor(publication.trackSid);\n\n    if (!frameCryptor) {\n      frameCryptor = this.createFrameCryptorForReceiver(\n        publication.track!.receiver,\n        participant.identity\n      );\n\n      this.frameCryptors.set(publication.trackSid, frameCryptor);\n      frameCryptor.setEnabled(true);\n      frameCryptor.setKeyIndex(\n        this.keyProvider.getLatestKeyIndex(participant.identity)\n      );\n    }\n  }\n\n  setSifTrailer(trailer: Uint8Array): void {\n    this.keyProvider.setSifTrailer(trailer);\n  }\n\n  // Utility methods\n  //////////////////////\n\n  private findTrackCryptor(trackId: string): RTCFrameCryptor | undefined {\n    return this.frameCryptors.get(trackId);\n  }\n\n  private createFrameCryptorForSender(\n    sender: RTCRtpSender,\n    participantId: string\n  ): RTCFrameCryptor {\n    return RTCFrameCryptorFactory.createFrameCryptorForRtpSender(\n      participantId,\n      sender,\n      this.algorithm,\n      this.keyProvider.rtcKeyProvider\n    );\n  }\n\n  private createFrameCryptorForReceiver(\n    receiver: RTCRtpReceiver,\n    participantId: string\n  ): RTCFrameCryptor {\n    return RTCFrameCryptorFactory.createFrameCryptorForRtpReceiver(\n      participantId,\n      receiver,\n      this.algorithm,\n      this.keyProvider.rtcKeyProvider\n    );\n  }\n\n  setupEngine(_engine: RTCEngine): void {\n    // No-op\n  }\n  setParticipantCryptorEnabled(\n    enabled: boolean,\n    participantIdentity: string\n  ): void {\n    if (\n      this.encryptionEnabled !== enabled &&\n      participantIdentity === this.room?.localParticipant.identity\n    ) {\n      this.encryptionEnabled = enabled;\n      this.emit(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        enabled,\n        this.room!.localParticipant\n      );\n    } else {\n      const participant =\n        this.room?.getParticipantByIdentity(participantIdentity);\n      if (!participant) {\n        throw TypeError(\n          `couldn't set encryption status, participant not found ${participantIdentity}`\n        );\n      }\n      this.emit(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        enabled,\n        participant\n      );\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}