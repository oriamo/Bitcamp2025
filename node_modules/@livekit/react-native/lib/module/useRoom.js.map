{"version":3,"names":["ConnectionState","RoomEvent","Track","useEffect","useState","useRoom","room","options","error","participants","setParticipants","audioTracks","setAudioTracks","sortFunc","sortParticipants","onParticipantsChanged","remotes","Array","from","remoteParticipants","values","newParticipants","localParticipant","push","onSubscribedTrackChanged","track","kind","Kind","Audio","tracks","forEach","p","audioTrackPublications","pub","audioTrack","onConnectionStateChanged","state","Connected","once","Disconnected","off","ParticipantConnected","ParticipantDisconnected","ActiveSpeakersChanged","TrackSubscribed","TrackUnsubscribed","LocalTrackPublished","LocalTrackUnpublished","AudioPlaybackStatusChanged","ConnectionStateChanged","on","Reconnected","disconnect","sort","a","b","_a$joinedAt","_b$joinedAt","isSpeaking","audioLevel","lastSpokeAt","_a$lastSpokeAt","_b$lastSpokeAt","aLast","getTime","bLast","aVideo","videoTrackPublications","size","bVideo","joinedAt","localIdx","indexOf","splice","length"],"sources":["useRoom.ts"],"sourcesContent":["import {\n  type AudioTrack,\n  ConnectionState,\n  LocalParticipant,\n  Participant,\n  RemoteTrack,\n  Room,\n  RoomEvent,\n  Track,\n} from 'livekit-client';\nimport { useEffect, useState } from 'react';\n\nexport interface RoomState {\n  room?: Room;\n  /* all participants in the room, including the local participant. */\n  participants: Participant[];\n  /* all subscribed audio tracks in the room, not including local participant. */\n  audioTracks: AudioTrack[];\n  error?: Error;\n}\n\nexport interface RoomOptions {\n  sortParticipants?: (participants: Participant[]) => void;\n}\n\n/** @deprecated wrap your components in a <LiveKitRoom> component instead and use more granular hooks to track state you're interested in */\nexport function useRoom(room: Room, options?: RoomOptions): RoomState {\n  const [error] = useState<Error>();\n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const [audioTracks, setAudioTracks] = useState<AudioTrack[]>([]);\n\n  const sortFunc = options?.sortParticipants ?? sortParticipants;\n\n  useEffect(() => {\n    const onParticipantsChanged = () => {\n      const remotes = Array.from(room.remoteParticipants.values());\n      const newParticipants: Participant[] = [room.localParticipant];\n      newParticipants.push(...remotes);\n      sortFunc(newParticipants, room.localParticipant);\n      setParticipants(newParticipants);\n    };\n    const onSubscribedTrackChanged = (track?: RemoteTrack) => {\n      // ordering may have changed, re-sort\n      onParticipantsChanged();\n      if (track && track.kind !== Track.Kind.Audio) {\n        return;\n      }\n      const tracks: AudioTrack[] = [];\n      room.remoteParticipants.forEach((p) => {\n        p.audioTrackPublications.forEach((pub) => {\n          if (pub.audioTrack) {\n            tracks.push(pub.audioTrack);\n          }\n        });\n      });\n      setAudioTracks(tracks);\n    };\n\n    const onConnectionStateChanged = (state: ConnectionState) => {\n      if (state === ConnectionState.Connected) {\n        onParticipantsChanged();\n      }\n    };\n\n    room.once(RoomEvent.Disconnected, () => {\n      room\n        .off(RoomEvent.ParticipantConnected, onParticipantsChanged)\n        .off(RoomEvent.ParticipantDisconnected, onParticipantsChanged)\n        .off(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged)\n        .off(RoomEvent.TrackSubscribed, onSubscribedTrackChanged)\n        .off(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged)\n        .off(RoomEvent.LocalTrackPublished, onParticipantsChanged)\n        .off(RoomEvent.LocalTrackUnpublished, onParticipantsChanged)\n        .off(RoomEvent.AudioPlaybackStatusChanged, onParticipantsChanged)\n        .off(RoomEvent.ConnectionStateChanged, onConnectionStateChanged);\n    });\n    room\n      .on(RoomEvent.ConnectionStateChanged, onConnectionStateChanged)\n      .on(RoomEvent.Reconnected, onParticipantsChanged)\n      .on(RoomEvent.ParticipantConnected, onParticipantsChanged)\n      .on(RoomEvent.ParticipantDisconnected, onParticipantsChanged)\n      .on(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged)\n      .on(RoomEvent.TrackSubscribed, onSubscribedTrackChanged)\n      .on(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged)\n      .on(RoomEvent.LocalTrackPublished, onParticipantsChanged)\n      .on(RoomEvent.LocalTrackUnpublished, onParticipantsChanged)\n      // trigger a state change by re-sorting participants\n      .on(RoomEvent.AudioPlaybackStatusChanged, onParticipantsChanged);\n\n    onSubscribedTrackChanged();\n\n    return () => {\n      room.disconnect();\n    };\n  }, [room, sortFunc]);\n\n  return {\n    error,\n    participants,\n    audioTracks,\n  };\n}\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function sortParticipants(\n  participants: Participant[],\n  localParticipant?: LocalParticipant\n) {\n  participants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTrackPublications.size > 0;\n    const bVideo = b.videoTrackPublications.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n\n  if (localParticipant) {\n    const localIdx = participants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      participants.splice(localIdx, 1);\n      if (participants.length > 0) {\n        participants.splice(1, 0, localParticipant);\n      } else {\n        participants.push(localParticipant);\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}