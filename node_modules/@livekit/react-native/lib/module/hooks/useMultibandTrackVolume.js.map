{"version":3,"names":["Track","useEffect","useMemo","useState","addListener","removeListener","LiveKitModule","multibandDefaults","bands","minFrequency","maxFrequency","updateInterval","useMultibandTrackVolume","trackOrTrackReference","options","_trackOrTrackReferenc","track","publication","opts","JSON","stringify","mediaStreamTrack","hasMediaStreamTrack","peerConnectionId","_peerConnectionId","mediaStreamTrackId","id","magnitudes","setMagnitudes","listener","Object","reactTag","createMultibandVolumeProcessor","event","deleteMultibandVolumeProcessor"],"sources":["useMultibandTrackVolume.ts"],"sourcesContent":["import { type TrackReferenceOrPlaceholder } from '@livekit/components-react';\nimport {\n  Track,\n  type LocalAudioTrack,\n  type RemoteAudioTrack,\n} from 'livekit-client';\nimport { useEffect, useMemo, useState } from 'react';\nimport { addListener, removeListener } from '../events/EventEmitter';\nimport LiveKitModule from '../LKNativeModule';\nimport type { MediaStreamTrack } from '@livekit/react-native-webrtc';\n\n/**\n * Interface for configuring options for the useMultibandTrackVolume hook.\n * @alpha\n */\nexport interface MultiBandTrackVolumeOptions {\n  /**\n   * the number of bands to split the audio into\n   */\n  bands?: number;\n  /**\n   * cut off frequency on the lower end\n   */\n  minFrequency?: number;\n  /**\n   * cut off frequency on the higher end\n   */\n  maxFrequency?: number;\n  /**\n   * update should run every x ms\n   */\n  updateInterval?: number;\n}\n\nconst multibandDefaults = {\n  bands: 5,\n  minFrequency: 1000,\n  maxFrequency: 8000,\n  updateInterval: 40,\n} as const satisfies MultiBandTrackVolumeOptions;\n\n/**\n * A hook for tracking the volume of an audio track across multiple frequency bands.\n *\n * @param trackOrTrackReference\n * @returns A number array containing the volume for each frequency band.\n */\nexport function useMultibandTrackVolume(\n  trackOrTrackReference?:\n    | LocalAudioTrack\n    | RemoteAudioTrack\n    | TrackReferenceOrPlaceholder,\n  options?: MultiBandTrackVolumeOptions\n) {\n  const track =\n    trackOrTrackReference instanceof Track\n      ? trackOrTrackReference\n      : <LocalAudioTrack | RemoteAudioTrack | undefined>(\n          trackOrTrackReference?.publication?.track\n        );\n  const opts = useMemo(() => {\n    return { ...multibandDefaults, ...options };\n\n    // disabled due to use of JSON.stringify, dependencies are reference equality\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(options)]);\n\n  const mediaStreamTrack = track?.mediaStreamTrack as\n    | MediaStreamTrack\n    | undefined;\n  const hasMediaStreamTrack = mediaStreamTrack != null;\n  const peerConnectionId = mediaStreamTrack?._peerConnectionId ?? -1;\n  const mediaStreamTrackId = mediaStreamTrack?.id;\n\n  let [magnitudes, setMagnitudes] = useState<number[]>([]);\n  useEffect(() => {\n    let listener = Object();\n    let reactTag: string | null = null;\n    if (hasMediaStreamTrack) {\n      reactTag = LiveKitModule.createMultibandVolumeProcessor(\n        opts,\n        peerConnectionId,\n        mediaStreamTrackId\n      );\n      addListener(listener, 'LK_MULTIBAND_PROCESSED', (event: any) => {\n        if (event.magnitudes && reactTag && event.id === reactTag) {\n          setMagnitudes(event.magnitudes);\n        }\n      });\n    }\n    return () => {\n      if (hasMediaStreamTrack) {\n        removeListener(listener);\n        if (reactTag) {\n          LiveKitModule.deleteMultibandVolumeProcessor(\n            reactTag,\n            peerConnectionId,\n            mediaStreamTrackId\n          );\n        }\n      }\n    };\n  }, [hasMediaStreamTrack, peerConnectionId, mediaStreamTrackId, opts]);\n\n  return magnitudes;\n}\n"],"mappings":"AACA,SACEA,KAAK,QAGA,gBAAgB;AACvB,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,EAAEC,cAAc,QAAQ,wBAAwB;AACpE,OAAOC,aAAa,MAAM,mBAAmB;;AAG7C;AACA;AACA;AACA;;AAoBA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,CAAC;EACRC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,cAAc,EAAE;AAClB,CAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CACrCC,qBAG+B,EAC/BC,OAAqC,EACrC;EAAA,IAAAC,qBAAA;EACA,MAAMC,KAAK,GACTH,qBAAqB,YAAYb,KAAK,GAClCa,qBAAqB,GAEnBA,qBAAqB,aAArBA,qBAAqB,gBAAAE,qBAAA,GAArBF,qBAAqB,CAAEI,WAAW,cAAAF,qBAAA,uBAAlCA,qBAAA,CAAoCC,KACrC;EACP,MAAME,IAAI,GAAGhB,OAAO,CAAC,MAAM;IACzB,OAAO;MAAE,GAAGK,iBAAiB;MAAE,GAAGO;IAAQ,CAAC;;IAE3C;IACA;EACF,CAAC,EAAE,CAACK,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC,CAAC;EAE7B,MAAMO,gBAAgB,GAAGL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,gBAEnB;EACb,MAAMC,mBAAmB,GAAGD,gBAAgB,IAAI,IAAI;EACpD,MAAME,gBAAgB,GAAG,CAAAF,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEG,iBAAiB,KAAI,CAAC,CAAC;EAClE,MAAMC,kBAAkB,GAAGJ,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEK,EAAE;EAE/C,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAW,EAAE,CAAC;EACxDF,SAAS,CAAC,MAAM;IACd,IAAI4B,QAAQ,GAAGC,MAAM,CAAC,CAAC;IACvB,IAAIC,QAAuB,GAAG,IAAI;IAClC,IAAIT,mBAAmB,EAAE;MACvBS,QAAQ,GAAGzB,aAAa,CAAC0B,8BAA8B,CACrDd,IAAI,EACJK,gBAAgB,EAChBE,kBACF,CAAC;MACDrB,WAAW,CAACyB,QAAQ,EAAE,wBAAwB,EAAGI,KAAU,IAAK;QAC9D,IAAIA,KAAK,CAACN,UAAU,IAAII,QAAQ,IAAIE,KAAK,CAACP,EAAE,KAAKK,QAAQ,EAAE;UACzDH,aAAa,CAACK,KAAK,CAACN,UAAU,CAAC;QACjC;MACF,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MACX,IAAIL,mBAAmB,EAAE;QACvBjB,cAAc,CAACwB,QAAQ,CAAC;QACxB,IAAIE,QAAQ,EAAE;UACZzB,aAAa,CAAC4B,8BAA8B,CAC1CH,QAAQ,EACRR,gBAAgB,EAChBE,kBACF,CAAC;QACH;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACH,mBAAmB,EAAEC,gBAAgB,EAAEE,kBAAkB,EAAEP,IAAI,CAAC,CAAC;EAErE,OAAOS,UAAU;AACnB","ignoreList":[]}