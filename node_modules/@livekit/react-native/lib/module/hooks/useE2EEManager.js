import RNE2EEManager from '../e2ee/RNE2EEManager';
import { log, RNKeyProvider } from '..';
import { useEffect, useState } from 'react';
/**
 * @experimental
 */
export function useRNE2EEManager(options) {
  let [keyProvider] = useState(() => new RNKeyProvider(options.keyProviderOptions ?? {}));
  let [e2eeManager] = useState(() => new RNE2EEManager(keyProvider));
  useEffect(() => {
    let setup = async () => {
      try {
        await keyProvider.setSharedKey(options.sharedKey);
      } catch (error) {
        log.warn('unable to set shared key', error);
      }
    };
    setup();
    return () => {};
  }, [keyProvider, options.sharedKey]);
  useEffect(() => {
    return () => {
      keyProvider.dispose();
    };
  }, [keyProvider]);
  return {
    keyProvider,
    e2eeManager
  };
}
//# sourceMappingURL=useE2EEManager.js.map