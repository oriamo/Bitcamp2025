{"version":3,"names":["Track","useEffect","useState","addListener","removeListener","LiveKitModule","useTrackVolume","trackOrTrackReference","_trackOrTrackReferenc","track","publication","mediaStreamTrack","hasMediaStreamTrack","peerConnectionId","_peerConnectionId","mediaStreamTrackId","id","volume","setVolume","listener","Object","reactTag","createVolumeProcessor","event","deleteVolumeProcessor"],"sources":["useTrackVolume.ts"],"sourcesContent":["import { type TrackReferenceOrPlaceholder } from '@livekit/components-react';\nimport {\n  Track,\n  type LocalAudioTrack,\n  type RemoteAudioTrack,\n} from 'livekit-client';\nimport { useEffect, useState } from 'react';\nimport { addListener, removeListener } from '../events/EventEmitter';\nimport LiveKitModule from '../LKNativeModule';\nimport type { MediaStreamTrack } from '@livekit/react-native-webrtc';\n\n/**\n * A hook for tracking the volume of an audio track.\n *\n * @param trackOrTrackReference\n * @returns A number between 0-1 representing the volume.\n */\nexport function useTrackVolume(\n  trackOrTrackReference?:\n    | LocalAudioTrack\n    | RemoteAudioTrack\n    | TrackReferenceOrPlaceholder\n) {\n  const track =\n    trackOrTrackReference instanceof Track\n      ? trackOrTrackReference\n      : <LocalAudioTrack | RemoteAudioTrack | undefined>(\n          trackOrTrackReference?.publication?.track\n        );\n\n  const mediaStreamTrack = track?.mediaStreamTrack as\n    | MediaStreamTrack\n    | undefined;\n  const hasMediaStreamTrack = mediaStreamTrack != null;\n  const peerConnectionId = mediaStreamTrack?._peerConnectionId ?? -1;\n  const mediaStreamTrackId = mediaStreamTrack?.id;\n\n  let [volume, setVolume] = useState(0.0);\n  useEffect(() => {\n    let listener = Object();\n    let reactTag: string | null = null;\n    if (hasMediaStreamTrack) {\n      reactTag = LiveKitModule.createVolumeProcessor(\n        peerConnectionId,\n        mediaStreamTrackId\n      );\n      addListener(listener, 'LK_VOLUME_PROCESSED', (event: any) => {\n        if (event.volume && reactTag && event.id === reactTag) {\n          setVolume(event.volume);\n        }\n      });\n    }\n    return () => {\n      if (hasMediaStreamTrack) {\n        removeListener(listener);\n        if (reactTag) {\n          LiveKitModule.deleteVolumeProcessor(\n            reactTag,\n            peerConnectionId,\n            mediaStreamTrackId\n          );\n        }\n      }\n    };\n  }, [hasMediaStreamTrack, peerConnectionId, mediaStreamTrackId]);\n\n  return volume;\n}\n"],"mappings":"AACA,SACEA,KAAK,QAGA,gBAAgB;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,cAAc,QAAQ,wBAAwB;AACpE,OAAOC,aAAa,MAAM,mBAAmB;AAG7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAC5BC,qBAG+B,EAC/B;EAAA,IAAAC,qBAAA;EACA,MAAMC,KAAK,GACTF,qBAAqB,YAAYP,KAAK,GAClCO,qBAAqB,GAEnBA,qBAAqB,aAArBA,qBAAqB,gBAAAC,qBAAA,GAArBD,qBAAqB,CAAEG,WAAW,cAAAF,qBAAA,uBAAlCA,qBAAA,CAAoCC,KACrC;EAEP,MAAME,gBAAgB,GAAGF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,gBAEnB;EACb,MAAMC,mBAAmB,GAAGD,gBAAgB,IAAI,IAAI;EACpD,MAAME,gBAAgB,GAAG,CAAAF,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEG,iBAAiB,KAAI,CAAC,CAAC;EAClE,MAAMC,kBAAkB,GAAGJ,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEK,EAAE;EAE/C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EACvCD,SAAS,CAAC,MAAM;IACd,IAAIkB,QAAQ,GAAGC,MAAM,CAAC,CAAC;IACvB,IAAIC,QAAuB,GAAG,IAAI;IAClC,IAAIT,mBAAmB,EAAE;MACvBS,QAAQ,GAAGhB,aAAa,CAACiB,qBAAqB,CAC5CT,gBAAgB,EAChBE,kBACF,CAAC;MACDZ,WAAW,CAACgB,QAAQ,EAAE,qBAAqB,EAAGI,KAAU,IAAK;QAC3D,IAAIA,KAAK,CAACN,MAAM,IAAII,QAAQ,IAAIE,KAAK,CAACP,EAAE,KAAKK,QAAQ,EAAE;UACrDH,SAAS,CAACK,KAAK,CAACN,MAAM,CAAC;QACzB;MACF,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MACX,IAAIL,mBAAmB,EAAE;QACvBR,cAAc,CAACe,QAAQ,CAAC;QACxB,IAAIE,QAAQ,EAAE;UACZhB,aAAa,CAACmB,qBAAqB,CACjCH,QAAQ,EACRR,gBAAgB,EAChBE,kBACF,CAAC;QACH;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACH,mBAAmB,EAAEC,gBAAgB,EAAEE,kBAAkB,CAAC,CAAC;EAE/D,OAAOE,MAAM;AACf","ignoreList":[]}