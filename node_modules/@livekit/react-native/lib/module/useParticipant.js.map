{"version":3,"names":["LocalParticipant","ParticipantEvent","Track","useEffect","useState","useParticipant","participant","isAudioMuted","setAudioMuted","setVideoMuted","connectionQuality","setConnectionQuality","isSpeaking","setSpeaking","metadata","setMetadata","publications","setPublications","subscribedTracks","setSubscribedTracks","cameraPublication","setCameraPublication","getTrackPublication","Source","Camera","microphonePublication","setMicrophonePublication","Microphone","screenSharePublication","setScreenSharePublication","ScreenShare","onPublicationsChanged","Array","from","trackPublications","values","filter","pub","isSubscribed","track","undefined","onMuted","kind","Kind","Audio","Video","onUnmuted","onMetadataChanged","onIsSpeakingChanged","onConnectionQualityUpdate","on","TrackMuted","TrackUnmuted","ParticipantMetadataChanged","IsSpeakingChanged","TrackPublished","TrackUnpublished","TrackSubscribed","TrackUnsubscribed","LocalTrackPublished","LocalTrackUnpublished","ConnectionQualityChanged","off","muted","audioTrackPublications","forEach","isMuted","isLocal"],"sources":["useParticipant.ts"],"sourcesContent":["import {\n  ConnectionQuality,\n  LocalParticipant,\n  Participant,\n  ParticipantEvent,\n  Track,\n  TrackPublication,\n} from 'livekit-client';\nimport { useEffect, useState } from 'react';\n\n/** @deprecated use `useRemoteParticipant` or `useLocalParticipant` instead */\nexport interface ParticipantState {\n  isSpeaking: boolean;\n  connectionQuality: ConnectionQuality;\n  isLocal: boolean;\n  metadata?: string;\n  publications: TrackPublication[];\n  subscribedTracks: TrackPublication[];\n  cameraPublication?: TrackPublication;\n  microphonePublication?: TrackPublication;\n  screenSharePublication?: TrackPublication;\n}\n/** @deprecated use `useRemoteParticipant` or `useLocalParticipant` instead */\nexport function useParticipant(participant: Participant): ParticipantState {\n  const [isAudioMuted, setAudioMuted] = useState(false);\n  const [, setVideoMuted] = useState(false);\n  const [connectionQuality, setConnectionQuality] = useState<ConnectionQuality>(\n    participant.connectionQuality\n  );\n  const [isSpeaking, setSpeaking] = useState(false);\n  const [metadata, setMetadata] = useState<string>();\n  const [publications, setPublications] = useState<TrackPublication[]>([]);\n  const [subscribedTracks, setSubscribedTracks] = useState<TrackPublication[]>(\n    []\n  );\n\n  const [cameraPublication, setCameraPublication] = useState(\n    participant.getTrackPublication(Track.Source.Camera)\n  );\n  const [microphonePublication, setMicrophonePublication] = useState(\n    participant.getTrackPublication(Track.Source.Microphone)\n  );\n  const [screenSharePublication, setScreenSharePublication] = useState(\n    participant.getTrackPublication(Track.Source.ScreenShare)\n  );\n  useEffect(() => {\n    const onPublicationsChanged = () => {\n      setPublications(Array.from(participant.trackPublications.values()));\n      setCameraPublication(\n        participant.getTrackPublication(Track.Source.Camera)\n      );\n      setMicrophonePublication(\n        participant.getTrackPublication(Track.Source.Microphone)\n      );\n      setScreenSharePublication(\n        participant.getTrackPublication(Track.Source.ScreenShare)\n      );\n      setSubscribedTracks(\n        Array.from(participant.trackPublications.values()).filter((pub) => {\n          return pub.isSubscribed && pub.track !== undefined;\n        })\n      );\n    };\n    const onMuted = (pub: TrackPublication) => {\n      if (pub.kind === Track.Kind.Audio) {\n        setAudioMuted(true);\n      } else if (pub.kind === Track.Kind.Video) {\n        setVideoMuted(true);\n      }\n    };\n    const onUnmuted = (pub: TrackPublication) => {\n      if (pub.kind === Track.Kind.Audio) {\n        setAudioMuted(false);\n      } else if (pub.kind === Track.Kind.Video) {\n        setVideoMuted(false);\n      }\n    };\n    const onMetadataChanged = () => {\n      if (participant.metadata) {\n        setMetadata(participant.metadata);\n      }\n    };\n    const onIsSpeakingChanged = () => {\n      setSpeaking(participant.isSpeaking);\n    };\n    const onConnectionQualityUpdate = () => {\n      setConnectionQuality(participant.connectionQuality);\n    };\n\n    // register listeners\n    participant\n      .on(ParticipantEvent.TrackMuted, onMuted)\n      .on(ParticipantEvent.TrackUnmuted, onUnmuted)\n      .on(ParticipantEvent.ParticipantMetadataChanged, onMetadataChanged)\n      .on(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged)\n      .on(ParticipantEvent.TrackPublished, onPublicationsChanged)\n      .on(ParticipantEvent.TrackUnpublished, onPublicationsChanged)\n      .on(ParticipantEvent.TrackSubscribed, onPublicationsChanged)\n      .on(ParticipantEvent.TrackUnsubscribed, onPublicationsChanged)\n      .on(ParticipantEvent.LocalTrackPublished, onPublicationsChanged)\n      .on(ParticipantEvent.LocalTrackUnpublished, onPublicationsChanged)\n      .on(ParticipantEvent.ConnectionQualityChanged, onConnectionQualityUpdate);\n\n    // set initial state\n    onMetadataChanged();\n    onIsSpeakingChanged();\n    onPublicationsChanged();\n\n    return () => {\n      // cleanup\n      participant\n        .off(ParticipantEvent.TrackMuted, onMuted)\n        .off(ParticipantEvent.TrackUnmuted, onUnmuted)\n        .off(ParticipantEvent.ParticipantMetadataChanged, onMetadataChanged)\n        .off(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged)\n        .off(ParticipantEvent.TrackPublished, onPublicationsChanged)\n        .off(ParticipantEvent.TrackUnpublished, onPublicationsChanged)\n        .off(ParticipantEvent.TrackSubscribed, onPublicationsChanged)\n        .off(ParticipantEvent.TrackUnsubscribed, onPublicationsChanged)\n        .off(ParticipantEvent.LocalTrackPublished, onPublicationsChanged)\n        .off(ParticipantEvent.LocalTrackUnpublished, onPublicationsChanged)\n        .off(\n          ParticipantEvent.ConnectionQualityChanged,\n          onConnectionQualityUpdate\n        );\n    };\n  }, [participant]);\n\n  let muted: boolean | undefined;\n  participant.audioTrackPublications.forEach((pub) => {\n    muted = pub.isMuted;\n  });\n  if (muted === undefined) {\n    muted = true;\n  }\n  if (isAudioMuted !== muted) {\n    setAudioMuted(muted);\n  }\n\n  return {\n    isLocal: participant instanceof LocalParticipant,\n    isSpeaking,\n    connectionQuality,\n    publications,\n    subscribedTracks,\n    cameraPublication,\n    microphonePublication,\n    screenSharePublication,\n    metadata,\n  };\n}\n"],"mappings":"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","ignoreList":[]}